Given a 2D array of size m * n. Your task is to find the sum of minimum value in each row.

For Example:

[
  [1, 2, 3, 4, 5],       // minimum value of row is 1
  [5, 6, 7, 8, 9],       // minimum value of row is 5
  [20, 21, 34, 56, 100]  // minimum value of row is 20
]
So, the function should return 26 because sum of minimums is as 1 + 5 + 20 = 26

Note: You will be always given non-empty array containing Positive values.

ENJOY CODING :)

My Code:
function sumOfMinimums(arr) {
   return arr.reduce((i, j) => i + Math.min(...j), 0);
}

Or:
function sumOfMinimums(arr) {
  let sum = 0;
  for (let i = 0; i < arr.length; i++){
      sum += Math.min(...arr[i]);
  }
  return sum;
}

Test:
describe("Basic tests", () => {
  it("Testing for [[7, 9, 8, 6, 2], [6, 3, 5, 4, 3], [5, 8, 7, 4, 5]]", () => assert.strictEqual(sumOfMinimums([[7, 9, 8, 6, 2], [6, 3, 5, 4, 3], [5, 8, 7, 4, 5]]), 9));
  it("Testing for [[11, 12, 14, 54], [67, 89, 90, 56], [7, 9, 4, 3], [9, 8, 6, 7]]", () => assert.strictEqual(sumOfMinimums([[11, 12, 14, 54], [67, 89, 90, 56], [7, 9, 4, 3], [9, 8, 6, 7]]), 76));
});


Code 3:
function sumOfMinimums(arr) {
let sum = 0;
for(let a of arr){
sum += Math.min.apply(Math, a);
}
return sum;

Code 4:
const _ = require('lodash/fp');

const sumOfMinimums = _.sumBy(_.min);

Code 5:
function sumOfMinimums(arr) {
  let sum=0;
  for (let i=0; i<arr.length; ++i){
    let min=Infinity;
    for (let j=0; j<arr[i].length; ++j)
      if (min>arr[i][j])
        min=arr[i][j];
    sum+=min;
  }
  return sum;
}
