Not all integers can be represented by JavaScript/TypeScript. It has space to to represent 53bit signed integers. 
In this Kata, we've to determine if it is safe to use the integer or not. Make use of the latest ES6 features to find this.

SafeInteger(9007199254740990) //true
SafeInteger(-90) //true
SafeInteger(9007199254740992) //false

Не все целые числа могут быть представлены JavaScript/TypeScript. У него есть пространство для представления 53-битных чисел со знаком.
В этой Kata, мы должны определить, является ли это безопасно использовать целое или Not. использовать последние ES6 функции, чтобы найти это.

SafeInteger (9007199254740990) //истина
SafeInteger (-90 )//true
SafeInteger (9007199254740992) //ложь

CODE 1:
function SafeInteger(n) {
  return (Number.isSafeInteger(n))? true : false
}

Test.assertEquals(SafeInteger(9007199254740992), false, 'Value returned should be false');
Test.assertEquals(SafeInteger(9007199254740990), true, 'Value returned should be true');
