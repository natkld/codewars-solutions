You might know some pretty large perfect squares. But what about the NEXT one?
Complete the findNextSquare method that finds the next integral perfect square after the one passed as a parameter. 
Recall that an integral perfect square is an integer n such that sqrt(n) is also an integer.
If the parameter is itself not a perfect square then -1 should be returned. You may assume the parameter is positive.
Examples:
findNextSquare(121) --> returns 144
findNextSquare(625) --> returns 676
findNextSquare(114) --> returns -1 since 114 is not a perfect

Вы можете знать довольно большие идеальные квадраты. А как же СЛЕДУЮЩИЙ?
Завершите метод findNextSquare, который находит следующий интегральный совершенный квадрат после того, как он передан в качестве параметра.
Напомним, что интегральный совершенный квадрат является целым числом n таким образом, что sqrt (n) также является целым числом.
Если параметр сам по себе не является совершенным квадратом, то следует вернуть -1. Можно предположить, что параметр является положительным.
Примеры:
findNextSquare (121) -- > возвращает 144
findNextSquare (625) -- > возвращает 676
findNextSquare (114) -- > возвращает -1, поскольку 114 не является совершенным

Test.describe("findNextSquare", function() {
  Test.it("should return the next square for perfect squares", function() {
    Test.assertEquals(findNextSquare(121), 144, "Wrong output for 121");
    Test.assertEquals(findNextSquare(625), 676, "Wrong output for 625");
    Test.assertEquals(findNextSquare(319225), 320356, "Wrong output for 319225");
    Test.assertEquals(findNextSquare(15241383936), 15241630849, "Wrong output for 15241383936");
  });
  
  Test.it("should return -1 for numbers which aren't perfect squares", function() {
    Test.assertEquals(findNextSquare(155), -1, "Wrong output for 155");
    Test.assertEquals(findNextSquare(342786627), -1, "Wrong output for 342786627");
  });
});


CODE 1:
function findNextSquare(sq) {
 let a = Math.sqrt(sq)
 return a % 1 === 0? Math.pow(a + 1, 2) : -1
}

CODE 2:
function findNextSquare(sq) {
    let r = Math.sqrt(sq)
    return r % 1 ? -1 : ++r * r
}

CODE 3:
function findNextSquare(sq) {
  let sqrt = Math.sqrt(sq);
  return Number.isInteger(sqrt) ? Math.pow(sqrt + 1, 2) : -1;
}
