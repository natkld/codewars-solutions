This Kata is intended as a small challenge for my students
All Star Code Challenge #22
Create a function called toTime() that takes an integer argument of seconds and converts the value into a string describing how many hours and minutes comprise that many seconds.
Any remaining seconds left over are ignored.
Note:
The string output needs to be in the specific form - "X hour(s) and X minute(s)"
toTime(3600); // => '1 hour(s) and 0 minute(s)'
toTime(3601); // => '1 hour(s) and 0 minute(s)'
toTime(3500); // => '0 hour(s) and 58 minute(s)'
toTime(323500); // => '89 hour(s) and 51 minute(s)'

Создайте функцию toTime (), которая принимает целочисленный аргумент в секундах и преобразует значение в строку, описывающую количество часов и минут в этом числе секунд.
Оставшиеся секунды игнорируются.
Примечание:
Вывод строки должен быть в определенной форме - «X часов и X минут»
toTime (3600) ;//= > '1 час (и) и 0 минут'
toTime (3601) ;//= > '1 час (и) и 0 минут'
toTime (3500) ;//= > «» 0 часов и 58 минут «»
toTime (323500) ;//= > '89 часов и 51 минут'

test:
Test.assertEquals(toTime(3600), '1 hour(s) and 0 minute(s)');
Test.assertEquals(toTime(3601), '1 hour(s) and 0 minute(s)');
Test.assertEquals(toTime(3500), '0 hour(s) and 58 minute(s)');
Test.assertEquals(toTime(323500), '89 hour(s) and 51 minute(s)');
Test.assertEquals(toTime(0), '0 hour(s) and 0 minute(s)');  

CODE 1:
function toTime(seconds) {
 let hours = Math.floor(seconds / 3600)
 let minutes = Math.floor((seconds % 3600) / 60)
 return `${hours} hour(s) and ${minutes} minute(s)`
}

CODE 1A:
function toTime(seconds) {
 return `${Math.floor(seconds / 3600)} hour(s) and ${Math.floor((seconds % 3600) / 60)} minute(s)`
}

CODE 2:
function toTime(seconds) {
  return Math.floor(seconds / 3600 ) + " hour(s) and " + Math.floor((seconds%3600)/60)  +" minute(s)"
}

CODE 3:
function toTime(time) {
  var h = Math.floor(time / 3600);
  var m = Math.floor(time % 3600 / 60);
  return h + " hour(s) and " + m + " minute(s)";
}
