Task:
Given two integers a and x, return the minimum non-negative number to add to / subtract from a to make it a multiple of x.

minimum(10, 6)  //= 2

10+2 = 12 which is a multiple of 6
Note
0 is always a multiple of x
Constraints
1 <= a <= 106
1 <= x <= 105

My code:
function minimum(a, x) {
 for (let i = 0; i < x; i++) {
    if((a - i) % x === 0 || (a + i) % x === 0)
         return i;}
  }
  
Test:
const chai = require("chai");
const assert = chai.assert;
chai.config.truncateThreshold = 0;

A = [
    [1, 1, 0],
    [9, 4, 1],
    [10, 6, 2],
    [60, 45, 15],
    [57, 50, 7],
    [28, 16, 4],
    [84, 80, 4],
    [129, 49, 18],
    [150, 67, 16],
    [121, 46, 17],
    [83, 81, 2],
    [89, 74, 15]       
]

describe("Sample tests", function() {
  it("...", function() {
    for (let [a,x,exp] of A) {
      assert.deepEqual(minimum(a,x), exp);
    }
  });
});

Code 2:
const minimum = (a, x) => Math.min(x - a % x, a % x)

Code 3:
function minimum(a, x) {
    let result = a % x;
    let result2 = x - result;

    return result < result2 ? result : result2;
    
Code 4:
function minimum(a, x) {
  return [a%x,x-a%x].sort((a,b)=>a-b)[0];
}

Code 5:
function minimum(a, x) {
  let i=0;
  while (i<a)
  {
    if((a-i)%x==0||(a+i)%x==0)
      return i;
    i++;
  }
  return i;
}

Code 6:
function minimum(a, x) {
  let y = a % x;
  let z = x * Math.ceil(a / x) - a
  return y > z ? z : y;
}

Code 7:
function minimum(a, x) {
  return (a%x)<Math.abs(x-(a%x))?a%x:Math.abs(x-a%x);
}
