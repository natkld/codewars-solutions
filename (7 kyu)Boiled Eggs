You are the greatest chef on earth. No one boils eggs like you! Your restaurant is always full of guests, who love your boiled eggs. But when there is a greater 
order of boiled eggs, you need some time, because you have only one pot for your job. How much time do you need?

Your Task
Implement a function, which takes a non-negative integer, representing the number of eggs to boil. It must return the time in minutes (integer), which it takes 
to have all the eggs boiled.
Rules
you can put at most 8 eggs into the pot at once
it takes 5 minutes to boil an egg
we assume, that the water is boiling all the time (no time to heat up)
for simplicity we also don't consider the time it takes to put eggs into the pot or get them out of it
Example
cookingTime(0); // must return 0
cookingTime(5); // must return 5
cookingTime(10); // must return 10

Ты величайший шеф-повар на земле. Никто не варит яйца, как ты! В вашем ресторане всегда полно гостей, которые любят ваши вареные яйца. Но когда есть больший
заказ вареных яиц, вам нужно некоторое время, потому что у вас есть только один горшок для вашей работы. Сколько вам нужно времени?

Ваша задача
Реализуйте функцию, которая принимает неотрицательное целое число, представляющее количество яиц для кипения. Он должен возвращать время в минутах (целое число), которое он занимает
чтобы все яйца были отварены.
Правила
в горшок можно положить не более 8 яиц сразу
на варку яйца уходит 5 минут
мы предполагаем, что вода кипит все время (нет времени нагреваться)
для простоты мы также не рассматриваем время, необходимое для того, чтобы положить яйца в горшок или вытащить их из него
Пример
cookingTime (0);//должен возвратиться 0
cookingTime (5);//должен возвратиться 5
cookingTime (10);//должен возвратиться 10

describe('Boiled Eggs', function() {
  it('should calculate the cooking time', function() {
    Test.assertEquals(cookingTime(0), 0, '0 eggs');
    Test.assertEquals(cookingTime(5), 5, '5 eggs');
    Test.assertEquals(cookingTime(10), 10, '10 eggs');
  });
});

CODE 1:
function cookingTime(eggs) {return (Math.ceil(eggs / 8)) * 5}

CODE 2:
function cookingTime(eggs) {
  return 5 * Math.ceil(eggs / 8);
}

CODE 3:
function cookingTime(eggs) {
  var maxEggs = 8;
  var time = 5;
  return Math.ceil( eggs / maxEggs ) * time;
}
