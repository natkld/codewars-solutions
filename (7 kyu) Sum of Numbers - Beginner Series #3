Given two integers a and b, which can be positive or negative, find the sum of all the integers between including them too and return it. 
If the two numbers are equal return a or b.
Note: a and b are not ordered!

Учитывая два целых числа a и b, которые могут быть положительными или отрицательными, найти сумму всех чисел между включая их тоже и вернуть его. 
Если два числа равны, возвращает a или b.
Примечание: а и б не заказаны!

Examples
GetSum(1, 0) == 1   // 1 + 0 = 1
GetSum(1, 2) == 3   // 1 + 2 = 3
GetSum(0, 1) == 1   // 0 + 1 = 1
GetSum(1, 1) == 1   // 1 Since both are same
GetSum(-1, 0) == -1 // -1 + 0 = -1
GetSum(-1, 2) == 2  // -1 + 0 + 1 + 2 = 2

CODE 1:
function getSum(a, b){
   let sum = 0;
   if (a < b) {for (let i = a; i <= b; i++) {
    sum += i
    } return sum}
   else {for (let i = b; i <= a; i++) {
    sum += i
    } return sum}  
}
        console.log (getSum(0,-1))  // -1;
        console.log (getSum(0,1))   //  1;
        
CODE 2:
const GetSum = (a, b) => {
  let min = Math.min(a, b),
      max = Math.max(a, b);
  return (max - min + 1) * (min + max) / 2;
}

CODE 3:
function GetSum( a,b ) {
   if (a == b) return a;
   else if (a < b) return a + GetSum(a + 1, b);
   else return a + GetSum(a - 1,b);
}

CODE 4:
function GetSum(a,b) {
  return (Math.abs(a - b) + 1) * (a + b) / 2;
}

CODE 5:
function GetSum( a,b ) {
  tmp = 0;
  
  if(a < b)
    while(a <= b) tmp += a++;
  else
    while(a >= b) tmp += a--;
      
  return tmp;
}
 CODE 6:
 function GetSum( a,b ) {
   let result = 0;
   let bigger = a > b ? a : b;
   let smaller = a > b ? b : a;
   for (let i = smaller; i <= bigger; i++) { result += i }
   return result
}
