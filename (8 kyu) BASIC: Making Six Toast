Story:
You are going to make toast fast, you think that you should make multiple pieces of toasts and once. So, you try to make 6 pieces of toast.
Problem:
You forgot to count the number of toast you put into there, you don't know if you put exactly six pieces of toast into the toasters.

Define a function that counts how many more (or less) pieces of toast you need in the toasters. 
Even though you need more or less, the number will still be positive, not negative.
Examples:
You must return the number of toast the you need to put in (or to take out). In case of 5 you can still put 1 toast in:

six_toast(5) == 1
And in case of 12 you need 6 toasts less (but not -6):

six_toast(12) == 6
Good luck!

История:
Вы собираетесь делать тосты быстро, вы думаете, что вы должны сделать несколько кусочков тостов и один раз. Итак, вы пытаетесь сделать 6 тостов.
Проблема:
Вы забыли посчитать количество тостов, которые вы туда поместили, вы не знаете, положили ли вы ровно шесть тостов в тостеры.

Определите функцию, которая подсчитывает, сколько (или меньше) частей тостов вам нужно в тостерах.
Даже если вам нужно больше или меньше, число все равно будет положительным, а не отрицательным.
Примеры:
Вы должны вернуть количество тостов, которые необходимо ввести (или вынуть). В случае 5 вы все еще можете поставить 1 тост в:

six_toast (5) == 1
А в случае 12 нужно на 6 тостов меньше (но не -6):

six_toast (12) == 6
Удачи!

CODE 1:
function sixToast(num) {
  let t = 6;
  return Math.abs(num - t);
}

Test.assertEquals(sixToast(6), 0);
Test.assertEquals(sixToast(17), 11);
Test.assertEquals(sixToast(3), 3);

CODE 2:
function sixToast(num) {
  return Math.abs(num-6)
}

CODE 3:
const sixToast = n => Math.abs(6 - n);

CODE 4:
function sixToast(num) {
  return num >= 6 ? num - 6 : num;
}
