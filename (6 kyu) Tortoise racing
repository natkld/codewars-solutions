Two tortoises named A and B must run a race. A starts with an average speed of 720 feet per hour. Young B knows she runs faster than A, 
and furthermore has not finished her cabbage.
When she starts, at last, she can see that A has a 70 feet lead but B's speed is 850 feet per hour. How long will it take B to catch A?
More generally: given two speeds v1 (A's speed, integer > 0) and v2 (B's speed, integer > 0) and a lead g (integer > 0) how long will it take B to catch A?
The result will be an array [hour, min, sec] which is the time needed in hours, minutes and seconds (round down to the nearest second) or a string in some languages.
If v1 >= v2 then return nil, nothing, null, None or {-1, -1, -1} for C++, C, Go, Nim, Pascal,[] for Kotlin or "-1 -1 -1".
Examples:
(form of the result depends on the language)
race(720, 850, 70) => [0, 32, 18] or "0 32 18"
race(80, 91, 37)   => [3, 21, 49] or "3 21 49"
Note:
See other examples in "Your test cases".
In Fortran - as in any other language - the returned string is not permitted to contain any redundant trailing whitespace: you can use dynamically allocated character strings.
** Hints for people who don't know how to convert to hours, minutes, seconds:
Tortoises don't care about fractions of seconds
Think of calculation by hand using only integers (in your code use or simulate integer division)
or Google: "convert decimal time to hours minutes seconds"


Две черепахи по имени А и Б должны провести гонку. А начинается со средней скорости 720 футов в час. Молодая Б знает, что она бежит быстрее, чем А,
и к тому же не съела свою капусту.
Когда она начила бежать, наконец, она видит, что А убежала на 70 футов вперед, но скорость Б составляет 850 футов в час. Сколько времени потребуется Б, чтобы догнать А?
В более общем смысле: учитывая две скорости v1 (скорость A, целое число > 0) и v2 (скорость B, целое число > 0) и расстояние, что пробежала А g (целое число > 0), сколько времени 
потребуется Б, чтобы догнать A?
Результатом будет массив [час, мин, сек], который является временем, необходимым в часах, минутах и секундах (округление до ближайшей секунды), или строка на некоторых языках.
Если v1 > = v2, то возвращает nil, nothing, null, None или {-1, -1, -1} для C++, C, Go, Nim, Pascal, [] для Котлина или «-1 -1 -1».
Примеры:
(форма результата зависит от языка)
race (720, 850, 70) = > [0, 32, 18] или «0 32 18»
race (80, 91, 37) = > [3, 21, 49] или «3 21 49»
Примечание:
См. другие примеры в разделе «Ваши тестовые примеры».
В Fortran - как и в любом другом языке - возвращаемая строка не может содержать никаких избыточных конечных пробелов: можно использовать динамически выделенные строки символов.
* * Советы для людей, которые не умеют переводить в часы, минуты, секунды:
Черепахам плевать на доли секунд
Подумайте о вычислении вручную, используя только целые числа (при использовании кода или имитации целочисленного деления)
или Google: «преобразование десятичного времени в часы минуты секунды»

TEST:
Test.describe("Tortoise Racing",function() {
  Test.it("Basic tests ",function() {            
    Test.assertSimilar(race(720, 850, 70), [0, 32, 18])
    Test.assertSimilar(race(80, 91, 37), [3, 21, 49])
    Test.assertSimilar(race(80, 100, 40), [2, 0, 0])
})})

CODE 1:
function race(v1, v2, g) {
  let time = g * 3600 / (v2 - v1)
  if(v2 < v1) return null
  return [Math.floor(time / 3600), Math.floor((time % 3600) / 60), Math.floor(time % 60)]
}

CODE 2:
function race(v1, v2, g){
  let time=g/(v2-v1);
  return v2>v1 ? [Math.floor(time),Math.floor(time*60%60),Math.floor(time*3600%60)] : null;
}

CODE 3:
function race(v1, v2, g) {
  if (v2 < v1) { return null; }
  
  var seconds = Math.floor(g / (v2 - v1) * 3600);
  var h = Math.floor(seconds / 3600);
  var m = Math.floor((seconds - h * 3600) / 60);
  var s = seconds - h * 3600 - m * 60;
  
  return [h, m, s];
}

CODE 4:
function race (v1, v2, g) {

  if (v1 >= v2) return null

  const time = g / ( v2 - v1 )

  let hours = Math.floor(time)
  let minutes = Math.floor((time * 60) % 60)
  let seconds = Math.floor((time * 3600) % 60)

  return [ hours, minutes, seconds ]
}
